{"version":3,"sources":["components/Filter.js","components/PersonForm.js","services/personService.js","components/Person.js","components/Persons.js","components/Notification.js","components/Error.js","App.js","index.js"],"names":["Filter","filterString","handleInput","value","onChange","PersonForm","newName","handleNameInput","newNumber","handleNumberInput","handleSubmit","onSubmit","required","type","baseUrl","axios","get","then","response","data","newPerson","post","updatedPerson","put","id","personID","delete","Person","person","deletePerson","name","number","onClick","Persons","personsToShow","map","Notification","message","className","Error","App","useState","persons","setPersons","setNewName","setNewNumber","filter","setFilter","notification","setNotification","error","setError","useEffect","personService","allPersons","timeId","setTimeout","clearTimeout","toLowerCase","startsWith","event","target","test","preventDefault","find","window","confirm","returnedPerson","catch","err","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.107e909d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({ filterString, handleInput }) => {\r\n    return (\r\n        <div>\r\n            filter: <input value={filterString} onChange={handleInput} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter\r\n","\r\nconst PersonForm = ({ newName, handleNameInput, newNumber, handleNumberInput, handleSubmit}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                name: <input value={newName} onChange={handleNameInput} required/>\r\n            </div>\r\n\r\n            <div>\r\n                number: <input value={newNumber} onChange={handleNumberInput} required />\r\n            </div>\r\n\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n\t\t</form>\r\n    )\r\n}\r\n\r\nexport default PersonForm\r\n","import axios from \"axios\"\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data )\r\n}\r\n\r\nconst addPerson = (newPerson) => {\r\n    const request = axios.post(baseUrl, newPerson)\r\n    return request.then(response => response.data )\r\n}\r\n\r\nconst updatePerson = (updatedPerson) => {\r\n    const request = axios.put(`${baseUrl}/${updatedPerson.id}`, updatedPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (personID) => {\r\n    const request = axios.delete(`${baseUrl}/${personID}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, addPerson, updatePerson, deletePerson}","import axios from \"axios\"\r\nimport personService from \"../services/personService\"\r\n\r\nconst Person = ({ person, deletePerson }) => {\r\n\r\n    return (\r\n        <div>\r\n            {person.name}: {person.number} <button onClick={() => deletePerson(person)}>delete</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Person","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Persons = ({ personsToShow, deletePerson }) => {\r\n    return (\r\n        <>\r\n            {personsToShow.map((person) => (\r\n\t\t\t\t<Person key={person.name} person={person} deletePerson={deletePerson} />\r\n\t\t\t))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Persons\r\n","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"notification\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import React from 'react'\r\n\r\nconst Error = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import React, { useState, useEffect } from \"react\";\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from \"./services/personService\";\nimport Notification from \"./components/Notification\";\nimport Error from \"./components/Error\";\n\nconst App = () => {\n\tconst [persons, setPersons] = useState([]);\n    const [newName, setNewName] = useState(\"\");\n    const [newNumber, setNewNumber] = useState(\"\")\n    const [filter, setFilter] = useState(\"\")\n    const [notification, setNotification] = useState(null)\n    const [error, setError] = useState(null)\n    \n    // Initializing persons state\n    useEffect(() => {\n        personService.getAll()\n        .then(allPersons =>{\n            setPersons(allPersons)\n        })\n\n    }, [])\n\n    useEffect(() => {\n        const timeId = setTimeout(() => {\n            // After 3 seconds set the error and notifications to null\n            setError(null)\n            setNotification(null)\n        }, 3000)\n\n        return () => {\n            clearTimeout(timeId)\n        }\n    }, [error, notification])\n\n\n    // Function for setting newName state\n\tconst handleNameInput = (event) => {\n\t\tsetNewName(event.target.value);\n\t};\n\n    // Function for setting number state\n    const handleNumberInput = (event) => {\n        // Only allows numbers and hyphens to be inputted\n        const re = /^[0-9-\\b]+$/;\n        if (event.target.value === '' || re.test(event.target.value)) {\n            setNewNumber(event.target.value)\n        }\n    }\n\n    // Function for setting filter state\n    const handleFilterInput = (event) => {\n        setFilter(event.target.value)\n    }\n\n    // Function for handling form submit\n\tconst handleSubmit = (event) => {\n\t\tevent.preventDefault();\n\n        // Check for if the person with the same name already exists\n        const found = persons.find(person => {\n            if (person.name.toLowerCase() === newName.toLowerCase()) {\n                return true\n            } \n        })\n\n        // If the person's found, update their number if the user confirms.\n        if (found) {\n            if (window.confirm(`${newName} is already in the phonebook, do you want to replace their old number with the new one?`)) {\n                const person = persons.find(person => person.name.toLowerCase() === newName.toLowerCase())\n                const updatedPerson = {...person, number: newNumber}\n                personService.updatePerson(updatedPerson)\n                .then(returnedPerson => {\n                    setPersons(persons.map(person => person.id !== returnedPerson.id ? person : returnedPerson))\n                    setNewName(\"\")\n                    setNewNumber(\"\")\n                    setNotification(`Updated ${returnedPerson.name}'s number`)\n\n                })\n                .catch(err => {\n                    setError(`${updatedPerson.name} has been removed from the server`)\n                })\n            }\n        } else {\n            const newPerson = { \n                name: newName, \n                number: newNumber \n            }\n\n            personService.addPerson(newPerson)\n            .then(returnedPerson => {\n                // Add the person and reset some state\n                setPersons(persons.concat(returnedPerson));\n                setNewName(\"\")\n                setNewNumber(\"\")\n                setNotification(`Added ${newName} to phonebook`)\n            })\n        }\n\t};\n\n    const deletePerson = (person) => {\n        const confirm = window.confirm(`Delete ${person.name}?`)\n        if (confirm) {\n            personService.deletePerson(person.id)\n            .then(response => {\n                personService.getAll()\n                .then(allPersons =>{\n                    setPersons(allPersons)\n                })\n                \n            })\n        }\n    }\n\n\n    // Holds array of filtered persons to show, if no filter is inputted, then the whole array is shown\n    const personsToShow = filter === '' ? persons : persons.filter(person => {\n        if (person.name.toLowerCase().startsWith(filter.toLowerCase())) {\n            return person\n        }\n    })\n\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>Phonebook</h2>\n\n            <Notification message={notification} />\n            <Error message={error} />\n            \n\n            <Filter filterString={filter} handleInput={handleFilterInput} />\n\n            <h2>Add a new person</h2>\n\n\t\t\t<PersonForm newName={newName} handleNameInput={handleNameInput} newNumber={newNumber} handleNumberInput={handleNumberInput} handleSubmit={handleSubmit} />\n\n\t\t\t<h2>Numbers</h2>\n\n            <Persons personsToShow={personsToShow} deletePerson={deletePerson} />\n\t\t\t\n\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}